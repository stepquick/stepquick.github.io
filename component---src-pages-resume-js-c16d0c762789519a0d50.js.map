{"version":3,"sources":["webpack:///./src/pages/resume.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","map","_ref","node","frontmatter","style","marginBottom","rhythm","class","company","startdate","enddate","className","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-resume-js-c16d0c762789519a0d50.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nimport \"../styles/job.css\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <h1>Resume</h1>\n        <SEO\n          title=\"Resume\"\n          keywords={[`resume`, `developer`, `web`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title\n          return (\n            <div>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                {title}\n              </h3>\n              <p class=\"job-location\">\n                <small>{node.frontmatter.company}, {node.frontmatter.location}</small>\n                <small>{node.frontmatter.startdate} - {node.frontmatter.enddate ?  node.frontmatter.enddate : \"Current\"}</small>\n              </p>\n              <div className=\"job-description\"\n                dangerouslySetInnerHTML={{\n                  __html: node.html,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n        sort: { fields: [frontmatter___startdate], order: DESC },\n        filter: { fileAbsolutePath: { regex: \"/jobs/\"} }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            startdate(formatString: \"MM/YYYY\")\n            enddate(formatString: \"MM/YYYY\")\n            title\n            location\n            company\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nimport \"../styles/rainbow.css\";\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            className = \"gradient-text\"\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            className = \"gradient-text\"\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © Copyright 2012 - {new Date().getFullYear()}, Stephen Quick\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}