webpackJsonp([0x6007043939c6],{418:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Stephen Quick",author:"Stephen Quick"}},markdownRemark:{id:"/Users/stepquick/Git/stepquick.github.io/src/pages/how-to-disable-chrome-web-security-for-development/index.md absPath of file >>> MarkdownRemark",html:'<p>Recently Iâ€™ve been developing an AngularJS application that requires access to an api from another sub domain. Since the API is another sub domain, Chrome complains that it is a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS">CORS</a> violation, automatically disallowing the request. This causes the application to hang forever because the route is dependent on calling this api first. What I decided to do was look up how to circumvent CORS in Google Chrome to test that it works correctly. I only need to do this locally, since I already authorized the live production version to work correctly.</p>\n<p>The command I found was from a <a href="http://stackoverflow.com/q/3102819/1612852">Stack Overflow</a> request.</p>\n<p>On Mac: <code class="language-text">open -a Google\\ Chrome --args --disable-web-security --user-data-dir</code>.</p>\n<p>On Linux: <code class="language-text">google-chrome --args --disable-web-security --user-data-dir</code></p>\n<p>On Windows: <code class="language-text">chrome.exe --args --disable-web-security --user-data-dir</code></p>\n<p>The later versions of Chrome say <code class="language-text">--disable-web-security</code> has been depreciated, but it still works. The flag <code class="language-text">--use-data-dir</code> appears to be required for CORS to be disabled.</p>\n<h3>Downside</h3>\n<p>Currently working on learning more about how to disable in Firefox, Safari, and ie11/edge. I may just commit to using Chrome locally, and checking the production version from the rest of the browsers.</p>',frontmatter:{title:"How to disable Chrome Web Security for development",date:"July 26, 2016"}}},pathContext:{slug:"/how-to-disable-chrome-web-security-for-development/",previous:{fields:{slug:"/upgraded-to-octopress-3/"},frontmatter:{title:"Upgraded to Octopress 3"}},next:{fields:{slug:"/disable-gpg-for-deployment/"},frontmatter:{title:"Disable GPG for Octopress Deploy"}}}}}});
//# sourceMappingURL=path---how-to-disable-chrome-web-security-for-development-2c5989e6fc605fbd43a0.js.map