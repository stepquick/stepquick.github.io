{"version":3,"file":"component---src-pages-resume-js-071982dec3dc019119a9.js","mappings":"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","sources":["webpack://squick-blog/./src/components/layout.js","webpack://squick-blog/./src/components/seo.js","webpack://squick-blog/./src/utils/date.js","webpack://squick-blog/./src/pages/resume.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\" className=\"gradient-text\">\r\n          {title}\r\n        </Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <div className=\"header-link-home\">\r\n        <Link className=\"gradient-text\" to=\"/\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\"><path d=\"M48 256a208 208 0 1 1 416 0A208 208 0 1 1 48 256zm464 0A256 256 0 1 0 0 256a256 256 0 1 0 512 0zM217.4 376.9c4.2 4.5 10.1 7.1 16.3 7.1c12.3 0 22.3-10 22.3-22.3V304h96c17.7 0 32-14.3 32-32V240c0-17.7-14.3-32-32-32H256V150.3c0-12.3-10-22.3-22.3-22.3c-6.2 0-12.1 2.6-16.3 7.1L117.5 242.2c-3.5 3.8-5.5 8.7-5.5 13.8s2 10.1 5.5 13.8l99.9 107.1z\" /></svg>\r\n          {title}\r\n        </Link>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© Copyright 2012 - {new Date().getFullYear()}, Stephen Quick\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","export const dateDiff = (startDate, endDate = today()) => {\n  var date = startDate.split(\"-\")\n  var end = new Date(endDate)\n  var year = end.getFullYear()\n  var month = end.getMonth() + 1\n  var day = end.getDate()\n  var yy = parseInt(date[0])\n  var mm = parseInt(date[1])\n  var dd = parseInt(date[2])\n  var years, months\n  // months\n  months = month - mm\n  if (day < dd) {\n    months--\n  }\n  // years\n  years = year - yy\n  if (month * 100 + day < mm * 100 + dd) {\n    years--\n    months += 12\n  }\n\n  return `${years ? `${years} year${years > 1 ? \"s\" : \"\"}` : \"\"}${\n    months ? `, ${months} month${months >= 1 ? \"s\" : \"\"}` : \"\"\n  }`.trim()\n}\n\nfunction today() {\n  return new Date().toString(\"yyyy-MM-dd\")\n}\n\nexport const getFormattedDate = date => {\n  if (!date) {\n    return null\n  }\n  date = new Date(date)\n  return `${date.getMonth()}/${date.getFullYear()}`\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { dateDiff, getFormattedDate } from \"../utils/date\"\n\nimport \"../styles/job.css\"\n\nconst Resume = ({ data: { site: { siteMetadata: { title: siteTitle } }, allMarkdownRemark: { group: jobs } } }) => {\n  jobs.sort((x, y) => x.edges[0].node.frontmatter.startdate < y.edges[0].node.frontmatter.startdate);\n  return (\n    <Layout title={siteTitle} location=\"resume\">\n      <h1>Resume</h1>\n      {jobs.map(({ fieldValue: company, edges }, index) => {\n        let { location } = edges[0].node.frontmatter;\n        return (\n          <div key={index}>\n            <div  style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n              <h3 style={{margin: 0}}>{company}</h3>\n              <span>({location})</span>\n            </div>\n            {edges.map(({ node: { frontmatter: { title, startdate, enddate }, html } }, ind) => {\n              return (<div key={ind}>\n                <p className=\"job-location\">\n                  <h5>\n                    {title}\n                  </h5>\n                  <h5>\n                    {getFormattedDate(startdate)} -{\" \"}\n                    {getFormattedDate(enddate ?? \"\") ?? \"Current\"} (\n                    {dateDiff(\n                      startdate,\n                      enddate ?? undefined\n                    )}\n                    )\n                  </h5>\n                </p>\n                <p dangerouslySetInnerHTML={{ __html: html }} />\n              </div>)\n            })}\n            <hr style={{marginBottom: '2em'}}/>\n          </div>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default Resume\n\nexport const Head = () => (\n  <Seo title=\"Resume\" />\n)\n\nexport const pageQuery = graphql`\nquery {\n  site {\n    siteMetadata{\n      title\n    }\n  }\n  allMarkdownRemark(\n    sort: {frontmatter: {startdate: DESC}}\n    filter: {fileAbsolutePath: {regex: \"/jobs/\"}}\n  ) {\n    group(field: {frontmatter: {company: SELECT}}) {\n      fieldValue\n      edges {\n        node {\n          html\n          frontmatter {\n            startdate(formatString: \"YYYY-MM-DD\")\n            enddate(formatString: \"YYYY-MM-DD\")\n            title\n            location\n            company\n          }\n        }\n      }\n    }\n  }\n}\n`\n"],"names":["_ref","location","title","children","isRootPath","pathname","header","React","className","Link","to","xmlns","height","viewBox","d","Date","getFullYear","_site$siteMetadata","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","dateDiff","startDate","endDate","toString","years","months","date","split","end","year","month","getMonth","day","getDate","yy","parseInt","mm","dd","trim","getFormattedDate","data","siteTitle","allMarkdownRemark","group","jobs","sort","x","y","edges","node","frontmatter","startdate","Layout","map","_ref2","index","fieldValue","company","key","style","display","alignItems","justifyContent","margin","_ref3","ind","_getFormattedDate","enddate","html","undefined","dangerouslySetInnerHTML","__html","marginBottom","Head","Seo"],"sourceRoot":""}