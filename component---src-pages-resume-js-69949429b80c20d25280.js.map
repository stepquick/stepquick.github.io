{"version":3,"file":"component---src-pages-resume-js-69949429b80c20d25280.js","mappings":"8LAAaA,EAAW,SAACC,EAAWC,QAAsB,IAAtBA,IAAAA,GA0BxB,IAAIC,MAAQC,SAAS,eAzB7B,IAQIC,EAAOC,EARPC,EAAON,EAAUO,MAAM,KACvBC,EAAM,IAAIN,KAAKD,GACfQ,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WAAa,EACzBC,EAAML,EAAIM,UACVC,EAAKC,SAASV,EAAK,IACnBW,EAAKD,SAASV,EAAK,IACnBY,EAAKF,SAASV,EAAK,IAcvB,OAXAD,EAASM,EAAQM,EACbJ,EAAMK,GACNb,IAGJD,EAAQK,EAAOM,EACH,IAARJ,EAAcE,EAAW,IAALI,EAAWC,IAC/Bd,IACAC,GAAU,KAGHD,EAAWA,EAAN,SAAoBA,EAAQ,EAAI,IAAM,IAAtC,IAA+C,IAA/D,KAAuEC,EAAYA,EAAN,UAAsBA,EAAS,EAAI,IAAM,IAAQ,KAO3H,IAAMc,EAAmB,SAACb,GAC7B,OAAIA,GAGJA,EAAO,IAAIJ,KAAKI,IACDM,WAAf,IAA6BN,EAAKI,cAHvB,MCYf,EAlCeU,EAAAA,MAAW,YAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAC1BC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,oCACA,gBAAC,IAAD,CACEG,MAAM,SACNI,SAAU,CAAC,SAAD,qBAEXH,EAAMI,KAAI,WAAWC,GAAW,IAAD,QAAlBC,EAAkB,EAAlBA,KACNP,EAAQO,EAAKC,YAAYR,MAC/B,OACE,uBAAKS,IAAKH,GACR,0BACGN,GAEH,qBAAGU,UAAU,gBACX,6BAAQH,EAAKC,YAAYG,QAAzB,KAAoCJ,EAAKC,YAAYZ,UACrD,6BAAQH,EAAiBc,EAAKC,YAAYI,WAA1C,gBAAyDnB,EAAgB,UAACc,EAAKC,mBAAN,aAAC,EAAkBK,gBAA5F,QAAwG,UAAxG,KAAqHxC,EAASkC,EAAKC,YAAYI,UAAlB,oBAA6BL,EAAKC,mBAAlC,aAA6B,EAAkBK,eAA/C,aAA0DC,GAAvL,MAEF,uBAAKJ,UAAU,kBACbK,wBAAyB,CACvBC,OAAQT,EAAKU","sources":["webpack://squick-blog/./src/utils/date.js","webpack://squick-blog/./src/pages/resume.js"],"sourcesContent":["export const dateDiff = (startDate, endDate = today()) => {\r\n    var date = startDate.split('-');\r\n    var end = new Date(endDate);\r\n    var year = end.getFullYear();\r\n    var month = end.getMonth() + 1;\r\n    var day = end.getDate();\r\n    var yy = parseInt(date[0]);\r\n    var mm = parseInt(date[1]);\r\n    var dd = parseInt(date[2]);\r\n    var years, months;\r\n    // months\r\n    months = month - mm;\r\n    if (day < dd) {\r\n        months--;\r\n    }\r\n    // years\r\n    years = year - yy;\r\n    if (month * 100 + day < mm * 100 + dd) {\r\n        years--;\r\n        months += 12;\r\n    }\r\n\r\n    return `${(years ? `${years} year${(years > 1 ? \"s\" : \"\")},` : \"\")} ${(months ? `${months} month${(months > 1 ? \"s\" : \"\")}` : \"\")}`;\r\n}\r\n\r\nfunction today() {\r\n    return (new Date()).toString(\"yyyy-MM-dd\");\r\n}\r\n\r\nexport const getFormattedDate = (date) => {\r\n    if(!date) {\r\n        return null;\r\n    }\r\n    date = new Date(date);\r\n    return `${date.getMonth()}/${date.getFullYear()}`;\r\n} ","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport {dateDiff,getFormattedDate} from \"../utils/date\"\r\n\r\nimport \"../styles/job.css\";\r\n\r\nconst Resume = React.memo(({data, location}) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>Resume</h1>\r\n      <SEO\r\n        title=\"Resume\"\r\n        keywords={[`resume`, `developer`, `web`]}\r\n      />\r\n      {posts.map(({ node }, index) => {\r\n        const title = node.frontmatter.title\r\n        return (\r\n          <div key={index}>\r\n            <h3>\r\n              {title}\r\n            </h3>\r\n            <p className=\"job-location\">\r\n              <small>{node.frontmatter.company}, {node.frontmatter.location}</small>\r\n              <small>{getFormattedDate(node.frontmatter.startdate)} - {getFormattedDate(node.frontmatter?.enddate) ?? \"Current\"} ({dateDiff(node.frontmatter.startdate, node.frontmatter?.enddate ?? undefined)})</small>\r\n            </p>\r\n            <div className=\"job-description\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: node.html,\r\n              }}\r\n            />\r\n          </div>\r\n        )\r\n      })}\r\n    </Layout>\r\n  )\r\n});\r\n\r\nexport default Resume\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n        sort: { fields: [frontmatter___startdate], order: DESC },\r\n        filter: { fileAbsolutePath: { regex: \"/jobs/\"} }) {\r\n      edges {\r\n        node {\r\n          html\r\n          frontmatter {\r\n            startdate(formatString: \"YYYY-MM-DD\")\r\n            enddate(formatString: \"YYYY-MM-DD\")\r\n            title\r\n            location\r\n            company\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["dateDiff","startDate","endDate","Date","toString","years","months","date","split","end","year","getFullYear","month","getMonth","day","getDate","yy","parseInt","mm","dd","getFormattedDate","React","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","keywords","map","index","node","frontmatter","key","className","company","startdate","enddate","undefined","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}