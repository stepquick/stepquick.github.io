{"version":3,"file":"component---src-templates-blog-post-js-2ceb7cd47d420141575e.js","mappings":"iJAuDA,IA5CY,WAAO,IAAD,EAeVA,EAAM,WAdCC,EAAAA,EAAAA,gBAAe,cAcRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAPN,sBASA,4BACGX,MAAAA,OAAA,EAAAA,EAAQY,OACP,uCACa,8BAASZ,EAAOY,MAD7B,KAC6CZ,MAAAA,OAAA,EAAAA,EAAQa,UAAW,MAGlE,yBACE,qBAAGC,KAAK,UAAUC,MAAO,CAAEC,YAAa,QAAxC,WACA,qBAAGF,KAAK,wCAAwCG,OAAO,SAASC,IAAI,aAAaH,MAAO,CAAEC,YAAa,QAAvG,aACA,qBAAGF,KAAK,+BAA+BI,IAAI,aAAaD,OAAO,SAASF,MAAO,CAAEC,YAAa,QAA9F,gB,kFCkBV,UA3DyB,SAAC,GAAwB,IAAD,EAArBG,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKjB,KAAKC,oBAAV,eAAwBqB,QAAxB,QACVC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,2BACEzB,UAAU,YACV0B,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYX,EAAKM,YAAYH,OAC1C,yBAAIH,EAAKM,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK5B,UAAU,iBACb,sBACEW,MAAO,CACLsB,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGhB,GACC,gBAAC,EAAAiB,KAAD,CAAMC,GAAIlB,EAASmB,OAAOC,KAAM3B,IAAI,QAApC,KACKO,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAgB,KAAD,CAAMC,GAAIjB,EAAKkB,OAAOC,KAAM3B,IAAI,QAC7BQ,EAAKC,YAAYH,MADpB,Y","sources":["webpack://squick-blog/./src/components/bio.js","webpack://squick-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      <div>\n        {author?.name && (\n          <p>\n            Written by <strong>{author.name}</strong> {author?.summary || null}\n          </p>\n        )}\n        <p>\n          <a href=\"/resume\" style={{ marginRight: \"1em\" }}>Resume.</a>\n          <a href=\"https://www.linkedin.com/in/stepquick\" target=\"_blank\" rel=\"noreferrer\" style={{ marginRight: \"1em\" }}>LinkedIn.</a>\n          <a href=\"https://github.com/stepquick\" rel=\"noreferrer\" target=\"_blank\" style={{ marginRight: \"1em\" }}>Github.</a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","S","layout","src","width","height","quality","alt","name","summary","href","style","marginRight","target","rel","data","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug"],"sourceRoot":""}