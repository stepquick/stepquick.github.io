{"data":{"site":{"siteMetadata":{"title":"Stephen Quick","author":"Stephen Quick"}},"markdownRemark":{"id":"002e5b54-ed80-5c8d-8932-5b42953c759e","html":"<p>I noticed that after migrating dev work to my new Vagrant vm, jekyll doesn’t seem to want to regenerate posts whenever I make a change and try to preview it. The simple change I found from a <a href=\"http://stackoverflow.com/questions/19822319/jekyll-regeneration-doesnt-work-inside-vagrant\">stackoverflow</a> post is instead of calling just jeykll build —watch, use jekyll build —watch —force_polling.</p>\n<p>I replace the this line in the rakefile:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">jekyllPid = Process.spawn({&quot;OCTOPRESS_ENV&quot;=&gt;&quot;preview&quot;}, &quot;jekyll build --watch&quot;)</code></pre>\n      </div>\n<p>with:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">jekyllPid = Process.spawn({&quot;OCTOPRESS_ENV&quot;=&gt;&quot;preview&quot;}, &quot;jekyll build --watch --force_polling&quot;)</code></pre>\n      </div>\n<p>Both generate rake watch and rake preview use this line, so make sure to replace both. This seems to have solved my issue with rake preview/watch. The question also has an answer suggesting that vagrant uses a special driver for the file syncing between guest and host machines, making the regeneration not work properly, so that’s something to keep in mind.</p>","frontmatter":{"title":"Force regeneration on jekyll watch","date":"August 15, 2014"}}},"pageContext":{"slug":"/posts/2014-08-15-force-regeneration-on-jekyll-watch/","previous":{"fields":{"slug":"/posts/2014-07-23-adding-upstream/"},"frontmatter":{"title":"Fetching Upstream changes"}},"next":{"fields":{"slug":"/posts/2014-09-08-use-gulp-notify-with-terminal-notifier/"},"frontmatter":{"title":"Notifications Using Gulp-Notify on Vagrant with Terminal-Notifier"}}}}